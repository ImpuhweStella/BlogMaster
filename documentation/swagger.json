{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "BlogMaster API",
      "description": "API documentation for BlogMaster"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "securityDefinitions": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\""
      }
    },
    "paths": {
      "/auth/register": {
        "post": {
          "tags": ["Auth"],
          "summary": "Register a new user",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User registration details",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["username", "email", "password"]
              }
            }
          ],
          "responses": {
            "201": { "description": "User registered successfully" },
            "400": { "description": "Invalid input" }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": ["Auth"],
          "summary": "Login a user",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User login details",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          ],
          "responses": {
            "200": { "description": "User logged in successfully" },
            "401": { "description": "Invalid credentials" }
          }
        }
      },
      "/blogs": {
        "get": {
          "tags": ["Blogs"],
          "summary": "Get all blogs",
          "responses": {
            "200": {
              "description": "List of blogs",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Blog"
                }
              }
            }
          }
        },
        "post": {
          "tags": ["Blogs"],
          "summary": "Create a new blog",
          "security": [{ "Bearer": [] }],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Blog details",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "content": { "type": "string" }
                },
                "required": ["title", "content"]
              }
            }
          ],
          "responses": {
            "201": { "description": "Blog created successfully" },
            "400": { "description": "Invalid input" },
            "401": { "description": "Unauthorized" }
          }
        }
      },
      "/blogs/{id}": {
        "get": {
          "tags": ["Blogs"],
          "summary": "Get a blog by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Blog ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Blog details",
              "schema": { "$ref": "#/definitions/Blog" }
            },
            "404": { "description": "Blog not found" }
          }
        },
        "put": {
          "tags": ["Blogs"],
          "summary": "Update a blog by ID",
          "security": [{ "Bearer": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Blog ID"
            },
            {
              "in": "body",
              "name": "body",
              "description": "Updated blog details",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "content": { "type": "string" }
                },
                "required": ["title", "content"]
              }
            }
          ],
          "responses": {
            "200": { "description": "Blog updated successfully" },
            "400": { "description": "Invalid input" },
            "401": { "description": "Unauthorized" },
            "404": { "description": "Blog not found" }
          }
        },
        "delete": {
          "tags": ["Blogs"],
          "summary": "Delete a blog by ID",
          "security": [{ "Bearer": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Blog ID"
            }
          ],
          "responses": {
            "200": { "description": "Blog deleted successfully" },
            "401": { "description": "Unauthorized" },
            "404": { "description": "Blog not found" }
          }
        }
      }
    },
    "definitions": {
      "Blog": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "author": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "username": { "type": "string" },
              "email": { "type": "string" }
            }
          },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      }
    }
  }
  